[tox]
envlist =
  py{37,36,35,34}-{unit,integration}
  linters
  docs

#### testing

[testenv]
usedevelop = true
description =
  py{37,36,35,34}-unit: Run unit tests.
  py{37,36,35,34}-integration: Run integration tests.
deps =
  coverage
  pytest
  pytest-cov
setenv =
  PYTHONDONTWRITEBYTECODE = 1
  INNOCONV_LINT_TARGETS = {toxinidir}/innoconv/ {toxinidir}/test/ {toxinidir}/integration_test/ {toxinidir}/setup.py
commands =
  py{36,35,34}-unit: pytest {posargs:test}
  py37-unit: coverage run --source={toxinidir}/innoconv/ -m pytest {posargs:test}
  py37-unit: coverage report --show-missing
  py{37,36,35,34}-integration: pytest --no-cov {toxinidir}/integration_test {posargs}

[testenv:cov-html]
basepython = python3.7
description = Generate HTML coverage report.
skip_install = true
deps =
  coverage
commands = coverage html

[testenv:serve-cov]
basepython = python3.7
description = Serve HTML coverage report.
skip_install = True
commands = python -m http.server --directory htmlcov {posargs:9000}

#### auto-formatting

[testenv:black]
basepython = python3.7
description = Auto-format source code.
skip_install = true
deps =
  black
commands = black --line-length 80 {env:INNOCONV_LINT_TARGETS}

#### linters

[testenv:flake8]
basepython = python3.7
description = Run flake8.
skip_install = true
deps =
  flake8
  flake8-colors
  flake8-docstrings
  flake8-import-order
  mccabe
  pep8-naming
  pydocstyle
  pyflakes
commands = flake8 {env:INNOCONV_LINT_TARGETS}

[testenv:pylint]
basepython = python3
description = Run pylint.
skip_install = true
deps =
  pylint
commands = pylint {env:INNOCONV_LINT_TARGETS}

[testenv:linters]
description = Run all linters.
deps =
  {[testenv:black]deps}
  {[testenv:flake8]deps}
  {[testenv:pylint]deps}
commands =
  {[testenv:black]commands}
  {[testenv:flake8]commands}
  {[testenv:pylint]commands}

#### docs

[testenv:docs]
basepython = python3.7
description = Build HTML documentation.
deps =
  --requirement={toxinidir}/rtd-requirements.txt
commands = sphinx-build -q -W -b html -d {envtmpdir}/doctrees {toxinidir}/doc {toxinidir}/doc/build/html

[testenv:docs-latex]
basepython = python3.7
description = Build LaTeX documentation.
deps =
  --requirement={toxinidir}/rtd-requirements.txt
commands = sphinx-build -q -W -b latex -d {envtmpdir}/doctrees {toxinidir}/doc {toxinidir}/doc/build/latex

[testenv:serve-docs]
basepython = python3.7
description = Serve HTML documentation.
skip_install = true
commands = python -m http.server --directory {toxinidir}/doc/build/html {posargs:8000}

#### release

[testenv:build]
basepython = python3.7
description = Build distribution.
skip_install = true
deps =
  wheel
  setuptools
commands = python setup.py -q sdist bdist_wheel

[testenv:release]
basepython = python3.7
description = Upload distribution to PyPI.
skip_install = true
passenv = TWINE_USERNAME TWINE_PASSWORD
deps =
  {[testenv:build]deps}
  twine >= 1.5.0
commands =
  {[testenv:build]commands}
  twine upload --skip-existing dist/*

#### development shell

[testenv:shell]
basepython = python3.7
description = Spawn a development shell.
usedevelop = true
whitelist_externals = *
commands = {posargs:bash}

#### tool configuration

[flake8]
exclude =
  .tox,
  .git,
  __pycache__,
  doc/conf.py,
  build,
  dist,
  integration_test/fixtures/*,
  integration_test/tub_base/*,
  *.pyc,
  *.egg-info,
  .cache,
  .eggs
ignore =
  # black inserts a blank line between function docstring and wrapped function
  # https://github.com/ambv/black/issues/196#issuecomment-392688816
  D202,
  # https://black.readthedocs.io/en/stable/the_black_code_style.html#line-breaks-binary-operators
  W503,
max-line-length = 80
max-complexity = 10
import-order-style = google
application-import-names = innoconv
format = ${cyan}%(path)s${reset}:${yellow_bold}%(row)d${reset}:${green_bold}%(col)d${reset}: ${red_bold}%(code)s${reset} %(text)s
